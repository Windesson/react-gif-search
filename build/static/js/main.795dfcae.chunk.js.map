{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","searchInput","currentTarget","reset","className","onSubmit","this","htmlFor","type","onChange","name","ref","input","placeholder","id","Component","Gif","url","src","alt","NoGifs","GifList","gifs","results","data","length","map","gif","index","key","images","fixed_height","App","loading","performSearch","query","axios","get","then","response","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"oPAEqBA,E,2MAEnBC,MAAQ,CACNC,WAAY,I,EAGdC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAGvCC,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKC,YAAYL,OAGrCH,EAAES,cAAcC,S,wEAGR,IAAD,OACP,OACE,0BAAMC,UAAU,cAAcC,SAAUC,KAAKT,cAC3C,2BAAOO,UAAU,YAAYG,QAAQ,UAArC,UACA,2BAAOC,KAAK,SACLC,SAAUH,KAAKd,eACfkB,KAAK,SACLC,IAAK,SAACC,GAAD,OAAW,EAAKX,YAAcW,GACnCC,YAAY,cACnB,4BAAQL,KAAK,SAASM,GAAG,SAASV,UAAU,iBAAgB,uBAAGA,UAAU,6BAAb,gB,GA5B5BW,aCMzBC,EANH,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAF,OACV,wBAAIb,UAAU,YACZ,yBAAKc,IAAKD,EAAKE,IAAI,OCKRC,EAPA,SAAArB,GAAK,OAClB,wBAAIK,UAAU,WACZ,uBAAGA,UAAU,2BAAb,+BACA,mECiBWiB,EAlBC,SAAAtB,GAEd,IACIuB,EADEC,EAAUxB,EAAMyB,KAStB,OANEF,EADCC,EAAQE,OAAS,EACXF,EAAQG,KACZ,SAACC,EAAIC,GAAL,OAAe,kBAAC,EAAD,CAAKC,IAAKD,EAAOX,IAAKU,EAAIG,OAAOC,aAAad,SAEzD,kBAAC,EAAD,MAIP,wBAAIb,UAAU,YACXkB,ICXcU,E,2MAEnB1C,MAAQ,CACNgC,KAAM,GACNW,SAAS,G,EAwBXC,cAAgB,SAACC,GACfC,IAAMC,IAAN,gDAAmDF,EAAnD,oCACCG,MAAK,SAAAC,GACJ,EAAK7C,SAAS,CAAE4B,KAAMiB,EAASf,KAAKA,UAErCgB,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,O,mFA3B9B,IAAD,OAClBL,IAAMC,IAAI,+DACTC,MAAK,SAAAC,GACJ,EAAK7C,SAAS,CAAE4B,KAAMiB,EAASf,KAAKA,KAAMS,SAAS,OAEpDO,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,Q,+BA0BjD,OACE,6BACE,yBAAKrC,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,aACA,kBAAC,EAAD,CAAYJ,SAAUM,KAAK4B,kBAG/B,yBAAK9B,UAAU,gBAEVE,KAAKhB,MAAM2C,QAAW,yCAAoB,kBAAC,EAAD,CAAST,KAAMlB,KAAKhB,MAAMgC,a,GAjDhDP,aCFjC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.795dfcae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SearchForm extends Component {\r\n  \r\n  state = {\r\n    searchText: ''\r\n  }\r\n \r\n  onSearchChange = e => {\r\n    this.setState({ searchText: e.target.value });\r\n  }\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSearch(this.searchInput.value);\r\n    //this.props.onSearch(this.state.searchText);\r\n\r\n    e.currentTarget.reset();\r\n  }\r\n  \r\n  render() {  \r\n    return (\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\r\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\r\n        <input type=\"search\" \r\n               onChange={this.onSearchChange}\r\n               name=\"search\" \r\n               ref={(input) => this.searchInput = input }\r\n               placeholder=\"Search...\" />\r\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\r\n      </form>      \r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Gif = ({url}) => (\r\n  <li className=\"gif-wrap\">\r\n    <img src={url} alt=\"\"/>\r\n  </li>\r\n);\r\n\r\nexport default Gif;","import React from 'react';\r\n\r\nconst NoGifs = props => (\r\n  <li className='no-gifs'>\r\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\r\n    <h3>Sorry, no GIFs match your search.</h3>\r\n  </li>\r\n);\r\n\r\nexport default NoGifs;","import React from 'react';\r\nimport Gif from './Gif';\r\nimport NoGifs from './NoGifs';\r\n\r\nconst GifList = props => { \r\n  \r\n  const results = props.data;\r\n  let gifs;\r\n  if(results.length > 0){\r\n    gifs = results.map( \r\n       (gif,index) => <Gif key={index} url={gif.images.fixed_height.url} /> )\r\n  } else {\r\n    gifs = <NoGifs />\r\n  }\r\n\r\n  return(\r\n    <ul className=\"gif-list\">\r\n      {gifs}\r\n    </ul> \r\n  );\r\n}\r\n\r\nexport default GifList;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport SearchForm from './Components/SearchForm';\r\nimport GifList from './Components/GifList';\r\n\r\nexport default class App extends Component {\r\n  \r\n  state = {\r\n    gifs: [],\r\n    loading: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC')\r\n    .then(response => {\r\n      this.setState({ gifs: response.data.data, loading: false});\r\n    })\r\n    .catch(error => {\r\n      console.log('Error fetching and parsing data', error);\r\n    });  \r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   fetch('http://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC')\r\n  //     .then( response => response.json())\r\n  //     .then( responseData => { \r\n  //       this.setState({ gifs: responseData.data})\r\n  //     })\r\n  //     .catch( error => {\r\n  //        console.log('Error fetching and parsing data')\r\n  //     });\r\n  // }\r\n\r\n  performSearch = (query) => {\r\n    axios.get(`http://api.giphy.com/v1/gifs/search?q=${query}&limit=24&api_key=dc6zaTOxFJmzC`)\r\n    .then(response => {\r\n      this.setState({ gifs: response.data.data})\r\n    })\r\n    .catch(error => {\r\n      console.log('Error fetching and parsing data', error);\r\n    });  \r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <div className=\"main-header\">\r\n          <div className=\"inner\">\r\n            <h1 className=\"main-title\">GifSearch</h1>\r\n            <SearchForm onSearch={this.performSearch}/>      \r\n          </div>   \r\n        </div>    \r\n        <div className=\"main-content\">\r\n          {\r\n            (this.state.loading) ? <p>Loading...</p> : <GifList data={this.state.gifs} />\r\n          }          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}